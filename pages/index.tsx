import React, { useState } from 'react'
import Head from 'next/head'
import styled from 'styled-components'
import cheerio from 'cheerio'
import HomePage from 'components/pages/Home'
import Link from 'next/link'
import CircularProgress from '@mui/material/CircularProgress'
import Box from '@mui/material/Box'
import { LoadingButton } from '@mui/lab'

const Main = styled.main`
  max-width: 1280px;
  margin: 0 auto;
  padding: 15px;  
`

const Form = styled.form`
  max-width: 100%;
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  button {
    margin: 0 5px;
  }

  input, select {
    height: 36px;
    border-radius: 5px;
  }
`

const Input = styled.input`
  margin: 0 5px;
  flex: 1;
`

function Home({ companies }) {

  const [pageInfo, setPageInfo] = useState({})
  const [isLoading, setIsLoading] = useState(false)

  const getURLInfo = async (e) => {
    e.preventDefault()

    setIsLoading(true)
    const url = e.currentTarget.url.value
    const response = await fetch("/api/hello", {
      method: 'POST',
      body: JSON.stringify({url: url}),
    })
    const result = await response.json()

    setPageInfo(result.data)

    const response2 = await fetch("/api/status", {
      method: 'POST',
      body: JSON.stringify({links: result.data.links}),
    })

    result.data.links = await response2.json()

    setPageInfo(result.data)

    const lh =  await fetch("/api/lighthouse", {
      method: 'POST',
      body: JSON.stringify({url: url}),
    })

    result.data.lh = await lh.json()

    setPageInfo(result.data)
    setIsLoading(false)
  }

  console.log(pageInfo)

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Main>
        <Form onSubmit={getURLInfo}>
          <label htmlFor="url">URL</label>
          <Input type="text" name="url" id="url" required />

          <select>
            <option value="mobile">Mobile</option>
            <option value="desktop">Desktop</option>
          </select>

          <LoadingButton type="submit" loading={isLoading} variant="outlined">
            Submit
          </LoadingButton>
        </Form>
        

        {Object.keys(pageInfo).length ? 
          <HomePage pageInfo={pageInfo} /> : null
        }
        
      </Main>
    </>
  )
}

export default Home

